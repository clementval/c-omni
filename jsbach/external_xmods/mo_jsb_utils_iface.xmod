<OmniFortranModule version="1.0">
  <name>mo_jsb_utils_iface</name>
  <depends>
    <name>mo_fortran_tools</name>
  </depends>
  <typeTable>
    <FfunctionType type="F7f9f2c191730" return_type="Fvoid" is_public="true"/>
    <FfunctionType type="F7f9f2c161290" return_type="Fvoid">
      <params>
        <name type="R7f9f2ba9abe0">y</name>
        <name type="R7f9f2ba9af60">x</name>
      </params>
    </FfunctionType>
    <FbasicType type="I7f9f2ba85f90" is_parameter="true" ref="Fint"/>
    <FbasicType type="R7f9f2ba9b460" ref="Freal">
      <kind>
        <Var type="I7f9f2ba85f90" scope="local">sp</Var>
      </kind>
    </FbasicType>
    <FbasicType type="R7f9f2ba9abe0" intent="inout" ref="R7f9f2ba9b460"/>
    <FbasicType type="R7f9f2ba9bb00" ref="Freal">
      <kind>
        <Var type="I7f9f2ba85f90" scope="local">sp</Var>
      </kind>
    </FbasicType>
    <FbasicType type="R7f9f2ba9af60" intent="in" is_optional="true" ref="R7f9f2ba9bb00"/>
    <FfunctionType type="F7f9f2c161910" return_type="Fvoid">
      <params>
        <name type="I7f9f2ba94f70">y</name>
        <name type="I7f9f2ba952f0">x</name>
      </params>
    </FfunctionType>
    <FbasicType type="I7f9f2ba94f70" intent="inout" ref="Fint"/>
    <FbasicType type="I7f9f2ba952f0" intent="in" is_optional="true" ref="Fint"/>
    <FfunctionType type="F7f9f2c161f70" return_type="Fvoid">
      <params>
        <name type="A7f9f2ba924b0">y</name>
        <name type="A7f9f2ba92830">x</name>
      </params>
    </FfunctionType>
    <FbasicType type="L7f9f2ba92ba0" intent="inout" ref="Flogical"/>
    <FbasicType type="L7f9f2ba93290" intent="inout" ref="L7f9f2ba92ba0"/>
    <FbasicType type="A7f9f2ba924b0" intent="inout" ref="L7f9f2ba93290">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FbasicType type="L7f9f2ba934b0" intent="in" is_optional="true" ref="Flogical"/>
    <FbasicType type="L7f9f2ba93a50" intent="in" is_optional="true" ref="L7f9f2ba934b0"/>
    <FbasicType type="A7f9f2ba92830" intent="in" is_optional="true" ref="L7f9f2ba93a50">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FfunctionType type="F7f9f2c162650" return_type="Fvoid">
      <params>
        <name type="L7f9f2ba91100">y</name>
        <name type="L7f9f2ba91480">x</name>
      </params>
    </FfunctionType>
    <FbasicType type="L7f9f2ba91100" intent="inout" ref="Flogical"/>
    <FbasicType type="L7f9f2ba91480" intent="in" is_optional="true" ref="Flogical"/>
    <FfunctionType type="F7f9f2c162cb0" return_type="Fvoid">
      <params>
        <name type="R7f9f2ba98a30">y</name>
        <name type="R7f9f2ba98db0">x</name>
      </params>
    </FfunctionType>
    <FbasicType type="I7f9f2ba86830" is_parameter="true" ref="Fint"/>
    <FbasicType type="R7f9f2ba99480" ref="Freal">
      <kind>
        <Var type="I7f9f2ba86830" scope="local">wp</Var>
      </kind>
    </FbasicType>
    <FbasicType type="R7f9f2ba98a30" intent="inout" ref="R7f9f2ba99480"/>
    <FbasicType type="R7f9f2ba99a50" ref="Freal">
      <kind>
        <Var type="I7f9f2ba86830" scope="local">wp</Var>
      </kind>
    </FbasicType>
    <FbasicType type="R7f9f2ba98db0" intent="in" is_optional="true" ref="R7f9f2ba99a50"/>
    <FfunctionType type="F7f9f2c163370" return_type="Fvoid">
      <params>
        <name type="A7f9f2b502800">y</name>
        <name type="A7f9f2b502b80">x</name>
      </params>
    </FfunctionType>
    <FbasicType type="I7f9f2ba968c0" intent="inout" ref="Fint"/>
    <FbasicType type="I7f9f2ba96e10" intent="inout" ref="I7f9f2ba968c0"/>
    <FbasicType type="A7f9f2b502800" intent="inout" ref="I7f9f2ba96e10">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FbasicType type="I7f9f2ba96f50" intent="in" is_optional="true" ref="Fint"/>
    <FbasicType type="I7f9f2ba97600" intent="in" is_optional="true" ref="I7f9f2ba96f50"/>
    <FbasicType type="A7f9f2b502b80" intent="in" is_optional="true" ref="I7f9f2ba97600">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FfunctionType type="F7f9f2c1639f0" return_type="Fvoid">
      <params>
        <name type="C7f9f2ba8f730">y</name>
        <name type="C7f9f2ba8fad0">x</name>
      </params>
    </FfunctionType>
    <FbasicType type="C7f9f2ba8fe20" ref="Fcharacter">
      <len is_assumed_size="true">
      </len>
    </FbasicType>
    <FbasicType type="C7f9f2ba8f730" intent="inout" ref="C7f9f2ba8fe20"/>
    <FbasicType type="C7f9f2ba903f0" ref="Fcharacter">
      <len is_assumed_size="true">
      </len>
    </FbasicType>
    <FbasicType type="C7f9f2ba8fad0" intent="in" is_optional="true" ref="C7f9f2ba903f0"/>
  </typeTable>
  <identifiers>
    <id type="F7f9f2c191730" sclass="ffunc" original_name="assign_if_present" declared_in="mo_fortran_tools">
      <name>assign_if_present</name>
    </id>
  </identifiers>
  <declarations>
  </declarations>
  <interfaceDecls>
  </interfaceDecls>
  <aux_info>
  </aux_info>
</OmniFortranModule>
